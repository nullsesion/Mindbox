using Contracts;
using Contracts.Attributes;
using Contracts.Primitives;

namespace FigurePlugin.Figures
{
	/// <summary>
	/// окружность на координатной плоскости
	/// </summary>
	[ExportFigure("CartesianCircle")]
	[CountPoints(1)]
	[CountRadius(1)]
	public class CartesianCircle: IFigurePolygon,IFigureRotation
	{
		public IPoint[] Points { get; private set; }
		public IRadius[] Radii { get; private set; }

		public bool TryGetArea(out double area)
		{
			area = -1;
			if (Radii.Length != 1)
				return false;

			area = Math.PI * Radii[0].Value * Radii[0].Value;
			return true;
		}

		
		public void SetPoints(IPoint[] points) => Points = points;

		public bool HasRightAngle()
		{
			return false;
		}
		public void SetRadii(IRadius[] radii) => Radii = radii;
	}
}
